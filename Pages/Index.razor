@page "/"
@using KinopoiskParser

<form>

    <div class="form-group">
        <label class="form-label">Фильм</label>
        <input type="text" class="form-control" @bind="@filmname" placeholder="Введите название" required>
    </div>

    <div class="form-group">
        <label>Год</label>
        <input type="text" class="form-control" @bind="@year" placeholder="Введите год выхода фильма">
        <small class="form-text text-muted">Это необязательное поле</small>
    </div>

    <div class="col-4">
        <button class="btn btn-primary" id="sendbutton" type="submit" @onclick="GetData" disabled=@isLoading>Получить результат</button>
    </div>

    @if (check == 0)
    {
        <p>Loading [@answers?.Count] ...</p>
        <div class="spinner-border" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    }
    else if (answers == null || answers.Count == 0)
    {
        <p>no data</p>
    }
    else
    {
        <p>Полученная оценка: @answers[0]</p>
        <p>Всего отзывов: @answers[1]</p>
        <p>Положительных: @answers[2]</p>
        <p>Негативных: @answers[3]</p>
    }

    @code {
        private List<string>? answers = null;
        private bool isLoading = false;
        public string filmname = "";
        public string year = "";
        private int check = 1;

        private async Task GetData()
        {
            check = 0;
            isLoading = true;
            string Text = "конец света";
           @* if (year != "")
                Text = filmname + " " + year;
            else
                Text = filmname;*@
        answers = new List<string>();
        check = 0;
        answers = await Data.Exec.GetScoreAsync(Text);
        isLoading = false;
        check = 1;
        StateHasChanged();
    }
    }


    @*@if (isLoading)
        {
            <p>Обработка ответов...</p>
        }

        @if (answers == null || answers.Count == 0)
        {
            <p>Ошибка сервиса</p>
        }
        else
        {
            for (var i = 0; i < answers.Count; i++)
            {
                <p><b>#@(i + 1):</b> @answers[@i]</p>
            }
        }


        @code {
            private List<string>? answers = null;
            private bool isLoading = false;
            public string Text { get; set; }

            private void UpdateText(ChangeEventArgs e)
            {
                Text += e.Value.ToString() + " ";
            }


            private async Task GetData()
            {
                isLoading = true;
                answers = new List<string>(4);
                answers.Add("1");
                answers.Add("2");
                answers.Add("3");
                answers.Add("4");
                //Data.Exec.GetScore(Text, out answers);
                StateHasChanged();
                await Task.Delay(11200);
                isLoading = false;
            }
        }*@

    @*    @if (answers.Count != 0)
        {
            <p>Полученная оценка: @answers[0]</p>
            <p>Всего отзывов: @answers[1]</p>
            <p>Негативных: @answers[2]</p>
            <p>Положительных: @answers[3]</p>
        }
        else
        {
            <div class="spinner-border" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        }*@
</form>
